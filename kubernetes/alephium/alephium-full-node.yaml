apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: alephium
  name: alephium
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alephium
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "12973"
        prometheus.io/scheme: http
        prometheus.io/scrape: "true"
      labels:
        app: alephium
      name: alephium
    spec:
      containers:
      - name: alephium
        env:
        - name: JAVA_OPTS
          value: -Xms256m -Xmx3072m
        - name: ALEPHIUM_LOG_LEVEL
          value: WARN
        image: alephium/alephium:latest
        imagePullPolicy: Always
        ports:
          - containerPort: 12973
        volumeMounts:
          - mountPath: "/alephium-home/"
            name: alephium-home
          - mountPath: "/alephium-home/.alephium/user.conf"
            name: alephium-configs
            subPath: user.conf
          - mountPath: "/alephium-home/file-uploads"
            name: file-uploads
#      - name: explorer-backend
#        command:
#          - /app/bin/explorer-backend-app
#          - -Dexplorer.host=0.0.0.0
#          - -Dblockflow.host=alephium
#          - -Ddb.db.host=postgres
#          - -Ddb.db.name=explorer
#        env:
#        - name: JAVA_OPTS
#          value: -Xms256m -Xmx3072m
#        - name: BLOCKFLOW_HOST
#          value: alephium
#        image: alephium/explorer-backend:0.10.0
#      - name: explorer-frontend
#        args:
#        image: alephium/explorer:55b49281b9bf9423f65f583671cbd4b25bf9eff5
      volumes:
        - name: alephium-home
          persistentVolumeClaim:
            claimName: alephium-blockchain-pvc-claim
        - name: alephium-configs
          configMap:
            name: alephium-configs
        - name: file-uploads  # required by http post
          emptyDir: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: alephium-blockchain-pvc-claim
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: alephium-configs
data:
  user.conf: |
    alephium.mining.miner-addresses = ["1EEiGRU3P88CeMhEYGsQBmzxknw3gtpncTE76jx7Y58mE", "1EVr6MCWgucwQqQukA4HZimondaRjwouDPmcqsB2g5Jt6", "16nEBYrg19QDxsX6hP7rK7z5cFabCtSAua5Raii7rn5Em", "1QuKHj8QMirKwdksoKq5YTFzR6YPP1RDvcNyuV26m32c"]
    alephium.mining.api-interface = "0.0.0.0"
    alephium.api.network-interface = "0.0.0.0"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  selector:
    matchLabels:
      app: postgres
  serviceName: postgres
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres
          volumeMounts:
            - name: explorer-postgres-data
              mountPath: /data/
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_DB
              value: explorer
            - name: PGDATA
              value: /data/pgdata2
      volumes:
        - name: explorer-postgres-data
          persistentVolumeClaim:
            claimName: alephium-explorer-postgres-pvc-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: alephium-explorer-postgres-pvc-claim
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
---
apiVersion: v1
kind: Service
metadata:
  name: alephium
spec:
  selector:
    app: alephium
  ports:
    - name: http
      protocol: TCP
      port: 12973
      targetPort: 12973
    - name: ws
      protocol: TCP
      port: 11973
      targetPort: 11973
    - name: p2p
      protocol: TCP
      port: 9973
      targetPort: 9973
    - name: miner
      protocol: TCP
      port: 10973
      targetPort: 10973
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: alephium-explorer
spec:
  selector:
    app: alephium
  ports:
    - name: frontend
      protocol: TCP
      port: 3000
      targetPort: 3000
    - name: backend
      protocol: TCP
      port: 9090
      targetPort: 9090
  type: ClusterIP
