apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: explorer-backend
  name: explorer-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: explorer-backend
  template:
    metadata:
      # No prometheus scraping
      # annotations:
      #   prometheus.io/path: /metrics
      #   prometheus.io/port: "9090"
      #   prometheus.io/scheme: http
      #   prometheus.io/scrape: "true"
      labels:
        app: explorer-backend
      name: explorer-backend
    spec:
      containers:
      - name: explorer-backend
        image: alephium/explorer-backend:1.7.0
        env:
        - name: JAVA_OPTS
          value: -Xms256m -Xmx3072m
        - name: BLOCKFLOW_HOST
          value: alephium
        - name: DB_HOST
          value: postgres
        - name: EXPLORER_HOST
          value: 0.0.0.0
        - name: EXPLORER_PORT
          value: "9090"
        - name: BLOCKFLOW_PORT
          value: "22973"
        - name: BLOCKFLOW_NETWORK_ID
          value: "4"
---
apiVersion: v1
kind: Service
metadata:
  name: explorer-backend
spec:
  selector:
    app: explorer-backend
  ports:
    - name: explorer-backend
      protocol: TCP
      port: 9090
      targetPort: 9090
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: explorer-frontend
  name: explorer-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: explorer-frontend
  template:
    metadata:
      labels:
        app: explorer-frontend
      name: explorer-frontend
    spec:
      containers:
      - name: explorer-frontend
        image: liuhongchao/explorer:softfork-123-2
        env:
          - name: REACT_APP_BACKEND_URL
            value: https://alephium-dev-explorer.softfork.se
          - name: REACT_APP_NETWORK_TYPE
            value: devnet
---
apiVersion: v1
kind: Service
metadata:
  name: explorer-frontend
spec:
  selector:
    app: explorer-frontend
  ports:
    - name: explorer-frontend
      protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  selector:
    matchLabels:
      app: postgres
  serviceName: postgres
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres
          volumeMounts:
            - name: explorer-postgres-data
              mountPath: /data/
            - name: dshm
              mountPath: /dev/shm
          env:
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_DB
              value: explorer
            - name: PGDATA
              value: /data/pgdata
      volumes:
        - name: explorer-postgres-data
          persistentVolumeClaim:
            claimName: alephium-explorer-postgres-pvc-claim-2
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: alephium-explorer-postgres-pvc-claim-2
spec:
  storageClassName: balanced-retain
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
